name: celerbuild-example-nodejs-prod
env: prod
repoPath: git@github.com:celerbuild/celerbuild-example-nodejs.git
targetDeployPath: /home/ubuntu/apps/nodejs
targetDeployWarehousePath: /home/ubuntu/repos/nodejs
targetWarehouseVersionKeep: 3
serverClusterID: 38
deployMode: tag
deployUser: ubuntu
buildCmds: >-
  # Build Commands

  tar --no-xattrs --no-mac-metadata -zcvf ${LOCAL_PACKAGE_FILE}
  .env.production.example *
preDeploymentCmds: ''
postDeploymentCmds: |-
  #!/bin/bash

  # Define project directories
  DEPLOY_USER="${DEPLOY_USER}"  # Deployment user (e.g., ubuntu, ec2-user, etc.)
  SOURCE_DIR="${TARGET_DEPLOYMENT_PATH}/${TARGET_DEPLOYMENT_PROJECT_NAME}"
  DEST_DIR="/home/${DEPLOY_USER}/celerbuild-example-nodejs"

  # Check if the destination directory exists
  if [ ! -d "$DEST_DIR" ]; then
      sudo mkdir -p "$DEST_DIR"
      echo "Directory $DEST_DIR created."
  else
      echo "Directory $DEST_DIR already exists."
  fi

  # Set permissions
  sudo chown -R ${DEPLOY_USER}:${DEPLOY_USER} "$DEST_DIR"
  sudo chmod -R 755 "$DEST_DIR"

  # Copy contents to the destination directory
  cp -r "$SOURCE_DIR"/. "$DEST_DIR"

  # Change to project directory
  cd "$DEST_DIR"

  # Create environment file from example if it exists
  if [ -f ".env.production.example" ]; then
      cp .env.production.example .env
      echo ".env file created from .env.production.example"
  fi

  # Install dependencies
  npm install --production

  # Restart Node.js application using PM2
  npm run pm2:restart:prod || npm run pm2:start:prod
numberOfLatestTags: 3
specifyBranches: ''
